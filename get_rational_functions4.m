% For finding coefficients of polynomials in rational functions in a 2-commodity model.
% a0: a row vector of direct labor coefficients.
% A: a square matrix of input coefficients.
% B: a square matrix of output coefficients.
% d: a column vector specifying the numeraire.
% S: a diagonal matrix.
%
% f: Coefficients of the polynomial in the numerator for the rational function
%  for the wage.
% g: Coefficients of the polynomial in the denominator for the rational functions
%  for the wage and prices of produced commodities.
% t: Coefficients of the polynomial in the numerator for the rational function
%  for the price of the first produced commodity.
% u:  Coefficients of the polynomial in the numerator for the rational function
%  for the price of the second produced commodity.
% v: Coefficients of the polynomial in the numerator for the rational function
%  for the price of the third produced commodity.
% x: Coefficients of the polynomial in the numerator for the rational function
%  for the price of the fourth produced commodity.

function [f, g, t, u, v, x] = get_rational_functions4( a0, A, B, d, S)
  % Notice that I do not check anything even for sixe.

  % Initialize
  f = zeros(1, 5);
  g = zeros(1, 4);
  t = zeros(1, 4);
  u = zeros(1, 4);
  v = zeros(1, 4);
  x = zeros(1, 4);

  AS = A*S;
  BA = B - A;

  f = polydet4( AS, BA);

  % =====================================
  % Matrices for t
  T11 = [[AS(2,2), AS(2,3), AS(2,4)]; ...
         [AS(3,2), AS(3,3), AS(3,4)]; ...
         [AS(4,2), AS(4,3), AS(4,4)]];
  T12 = [[BA(2,2), BA(2,3), BA(2,4)]; ...
         [BA(3,2), BA(3,3), BA(3,4)]; ...
         [BA(4,2), BA(4,3), BA(4,4)]];

  T21 = [[AS(2,1), AS(2,3), AS(2,4)]; ...
         [AS(3,1), AS(3,3), AS(3,4)]; ...
         [AS(4,1), AS(4,3), AS(4,4)]];
  T22 = [[BA(2,1), BA(2,3), BA(2,4)]; ...
         [BA(3,1), BA(3,3), BA(3,4)]; ...
         [BA(4,1), BA(4,3), BA(4,4)]];

  T31 = [[AS(2,1), AS(2,2), AS(2,4)]; ...
         [AS(3,1), AS(3,2), AS(3,4)]; ...
         [AS(4,1), AS(4,2), AS(4,4)]];
  T32 = [[BA(2,1), BA(2,2), BA(2,4)]; ...
         [BA(3,1), BA(3,2), BA(3,4)]; ...
         [BA(4,1), BA(4,2), BA(4,4)]];

  T41 = [[AS(2,1), AS(2,2), AS(2,3)]; ...
         [AS(3,1), AS(3,2), AS(3,3)]; ...
         [AS(4,1), AS(4,2), AS(4,3)]];
  T42 = [[BA(2,1), BA(2,2), BA(2,3)]; ...
         [BA(3,1), BA(3,2), BA(3,3)]; ...
         [BA(4,1), BA(4,2), BA(4,3)]];

   t = a0(1)*polydet3( T11, T12 ) ...
      - a0(2)*polydet3( T21, T22 ) ...
      + a0(3)*polydet3( T31, T32 ) ...
      - a0(4)*polydet3( T41, T42 );

  % =====================================
  % Matrices for u
  U11 = [[AS(1,2), AS(1,3), AS(1,4)]; ...
         [AS(3,2), AS(3,3), AS(3,4)]; ...
         [AS(4,2), AS(4,3), AS(4,4)]];
  U12 = [[BA(1,2), BA(1,3), BA(1,4)]; ...
         [BA(3,2), BA(3,3), BA(3,4)]; ...
         [BA(4,2), BA(4,3), BA(4,4)]];

  U21 = [[AS(1,1), AS(1,3), AS(1,4)]; ...
         [AS(3,1), AS(3,3), AS(3,4)]; ...
         [AS(4,1), AS(4,3), AS(4,4)]];
  U22 = [[BA(1,1), BA(1,3), BA(1,4)]; ...
         [BA(3,1), BA(3,3), BA(3,4)]; ...
         [BA(4,1), BA(4,3), BA(4,4)]];

  U31 = [[AS(1,1), AS(1,2), AS(1,4)]; ...
         [AS(3,1), AS(3,2), AS(3,4)]; ...
         [AS(4,1), AS(4,2), AS(4,4)]];
  U32 = [[BA(1,1), BA(1,2), BA(1,4)]; ...
         [BA(3,1), BA(3,2), BA(3,4)]; ...
         [BA(4,1), BA(4,2), BA(4,4)]];

  U41 = [[AS(1,1), AS(1,2), AS(1,3)]; ...
         [AS(3,1), AS(3,2), AS(3,3)]; ...
         [AS(4,1), AS(4,2), AS(4,3)]];
  U42 = [[BA(1,1), BA(1,2), BA(1,3)]; ...
         [BA(3,1), BA(3,2), BA(3,3)]; ...
         [BA(4,1), BA(4,2), BA(4,3)]];

  u = - a0(1)*polydet3( U11, U12 ) ...
      + a0(2)*polydet3( U21, U22 ) ...
      - a0(3)*polydet3( U31, U32 ) ...
      + a0(4)*polydet3( U41, U42 );

  % =====================================
  % Matrices for v
  V11 = [[AS(1,2), AS(1,3), AS(1,4)]; ...
         [AS(2,2), AS(2,3), AS(2,4)]; ...
         [AS(4,2), AS(4,3), AS(4,4)]];
  V12 = [[BA(1,2), BA(1,3), BA(1,4)]; ...
         [BA(2,2), BA(2,3), BA(2,4)]; ...
         [BA(4,2), BA(4,3), BA(4,4)]];

  V21 = [[AS(1,1), AS(1,3), AS(1,4)]; ...
         [AS(2,1), AS(2,3), AS(2,4)]; ...
         [AS(4,1), AS(4,3), AS(4,4)]];
  V22 = [[BA(1,1), BA(1,3), BA(1,4)]; ...
         [BA(2,1), BA(2,3), BA(2,4)]; ...
         [BA(4,1), BA(4,3), BA(4,4)]];

  V31 = [[AS(1,1), AS(1,2), AS(1,4)]; ...
         [AS(2,1), AS(2,2), AS(2,4)]; ...
         [AS(4,1), AS(4,2), AS(4,4)]];
  V32 = [[BA(1,1), BA(1,2), BA(1,4)]; ...
         [BA(2,1), BA(2,2), BA(2,4)]; ...
         [BA(4,1), BA(4,2), BA(4,4)]];

  V41 = [[AS(1,1), AS(1,2), AS(1,3)]; ...
         [AS(2,1), AS(2,2), AS(2,3)]; ...
         [AS(4,1), AS(4,2), AS(4,3)]];
  V42 = [[BA(1,1), BA(1,2), BA(1,3)]; ...
         [BA(2,1), BA(2,2), BA(2,3)]; ...
         [BA(4,1), BA(4,2), BA(4,3)]];

  v = a0(1)*polydet3( V11, V12 ) ...
      - a0(2)*polydet3( V21, V22 ) ...
      + a0(3)*polydet3( V31, V32 ) ...
      - a0(4)*polydet3( V41, V42 );

  % =====================================
  % Matrices for x
  X11 = [[AS(1,2), AS(1,3), AS(1,4)]; ...
         [AS(2,2), AS(2,3), AS(2,4)]; ...
         [AS(3,2), AS(3,3), AS(3,4)]];
  X12 = [[BA(1,2), BA(1,3), BA(1,4)]; ...
         [BA(2,2), BA(2,3), BA(2,4)]; ...
         [BA(3,2), BA(3,3), BA(3,4)]];

  X21 = [[AS(1,1), AS(1,3), AS(1,4)]; ...
         [AS(2,1), AS(2,3), AS(2,4)]; ...
         [AS(3,1), AS(3,3), AS(3,4)]];
  X22 = [[BA(1,1), BA(1,3), BA(1,4)]; ...
         [BA(2,1), BA(2,3), BA(2,4)]; ...
         [BA(3,1), BA(3,3), BA(3,4)]];

  X31 = [[AS(1,1), AS(1,2), AS(1,4)]; ...
         [AS(2,1), AS(2,2), AS(2,4)]; ...
         [AS(3,1), AS(3,2), AS(3,4)]];
  X32 = [[BA(1,1), BA(1,2), BA(1,4)]; ...
         [BA(2,1), BA(2,2), BA(2,4)]; ...
         [BA(3,1), BA(3,2), BA(3,4)]];

  X41 = [[AS(1,1), AS(1,2), AS(1,3)]; ...
         [AS(2,1), AS(2,2), AS(2,3)]; ...
         [AS(3,1), AS(3,2), AS(3,3)]];
  X42 = [[BA(1,1), BA(1,2), BA(1,3)]; ...
         [BA(2,1), BA(2,2), BA(2,3)]; ...
         [BA(3,1), BA(3,2), BA(3,3)]];

   x = - a0(1)*polydet3( X11, X12 ) ...
      + a0(2)*polydet3( X21, X22 ) ...
      - a0(3)*polydet3( X31, X32 ) ...
      + a0(4)*polydet3( X41, X42 );

  % =====================================
  g = d(1)*t + d(2)*u + d(3)*v + d(4)*x;

end
